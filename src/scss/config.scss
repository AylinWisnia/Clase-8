$background-color: #f1f1f1;
$grid-nav: nav;
$grid-content: content;
$grid-footer: foter;
$grid-areas: "#{$grid-nav}""#{$grid-content}""#{$grid-footer}";

$primary-color: burlywood;
$primary-text-color: #fdfdfd;

$media_queries: (
    "mobile": "only screen and (max-width: 768px)",
    "tablet": "only screen and (min-width: 768px) and (max-width: 1199px)",
    "small-desktop":
        "only screen and (min-width: 1200px) and (max-width: 1500px)",
    "special-size": "only screen and (max-width: 1650px)",
    "special-size-none": "only screen and (min-width: 1200px)",
    "desktop": "only screen and (min-width: 1500px)",
);
/*
    Entendiendo al funcion: for_breakpoint
    param: le entra la o las  media query que se desea evaluar
    despues se itera sobre el arreglo de media queries 
    y se va agregadno a la lista condtion a medida que el map-get devuelve
    el value de la key dada en forma de string por el inspect

*/

@mixin for_breakpoint($breakpoints) {
    $conditions: ();
    @each $breakpoint in $breakpoints {
        // If the key exists in the map
        $conditions: append(
            $conditions,
            #{inspect(map-get($media_queries, $breakpoint))},
            comma
        );
    }

    @media #{$conditions} {
        @content;
    }
}

header {
    grid-area: $grid-nav;
}
main {
    grid-area: $grid-content;
}
footer {
    grid-area: $grid-footer;
}

* {
    box-sizing: border-box;
    margin: 0 auto;
}



ul,
li {
    list-style: none;
    margin: 0;
    padding: 0;
}
body {
    background: $background-color;
    display: grid;
    font-family: Arial, Helvetica, sans-serif;
    grid-template-areas: $grid-areas;
    grid-template-columns: auto;
    grid-template-rows: 50px auto auto;
}


.w-100 {
    width: 100%;
}